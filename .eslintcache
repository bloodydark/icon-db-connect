[{"C:\\Users\\rs102\\Desktop\\borrow\\src\\App.js":"1","C:\\Users\\rs102\\Desktop\\borrow\\src\\_util\\verifyFile.jsx":"2","C:\\Users\\rs102\\Desktop\\borrow\\src\\ProfileImage\\Profile.jsx":"3","C:\\Users\\rs102\\Desktop\\borrow\\src\\firebase\\firebase.js":"4"},{"size":192,"mtime":1606649675869,"results":"5","hashOfConfig":"6"},{"size":798,"mtime":1606649232356,"results":"7","hashOfConfig":"6"},{"size":3958,"mtime":1606652610264,"results":"8","hashOfConfig":"6"},{"size":621,"mtime":1606650583041,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nddifm",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rs102\\Desktop\\borrow\\src\\App.js",[],"C:\\Users\\rs102\\Desktop\\borrow\\src\\_util\\verifyFile.jsx",[],"C:\\Users\\rs102\\Desktop\\borrow\\src\\ProfileImage\\Profile.jsx",["19"],"import React, { useState } from \"react\";\r\nimport defaultImage from \"../images/user_default.png\";\r\n//import { axiosInstance } from '../../../api/axios-api';\r\nimport AvatarEditor from \"react-avatar-editor\";\r\nimport { verifyFile } from \"../_util/verifyFile\";\r\nimport \"./Profile.css\";\r\nimport { storage } from \"../firebase/firebase\";\r\n\r\nexport const ProfileImage = () => {\r\n  const initialState = {\r\n    selectedFile: null,\r\n    imageSrc: null,\r\n    progress: 0,\r\n    scale: 1,\r\n    position: { x: 0.5, y: 0.5 },\r\n    showImageEditor: false,\r\n  };\r\n\r\n  let imgeditor = null;\r\n  const setEditorRef = (editor) => (imgeditor = editor);\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const updateState = (data) =>\r\n    setState((prevState) => ({ ...prevState, ...data }));\r\n\r\n  const onScale = (event) => {\r\n    const scale = parseFloat(event.target.value);\r\n    updateState({ scale: scale });\r\n  };\r\n\r\n  const onPositionChange = (position) => {\r\n    updateState({ position: position });\r\n  };\r\n\r\n  const uploadImage = () => {\r\n    const url = imgeditor.getImageScaledToCanvas().toDataURL();\r\n    updateState({ imageSrc: url, showImageEditor: false });\r\n    //ToDO save the url to a paritcular employee in firebase\r\n    // const uploadImage = storage.ref(`images/${imageSrc}`).put(imageSrc);\r\n    // uploadImage.on(\r\n    //   \"state_changed\",\r\n    //   (snapshot) => {\r\n    //     //progress function\r\n    //     const progress = Math.round(\r\n    //       (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n    //     );\r\n    //     updateState({ progress: progress });\r\n    //   },\r\n    //   (error) => {\r\n    //     //error function\r\n    //   },\r\n    //   (complete) => {\r\n    //     //complete function\r\n    //     storage\r\n    //       .ref(\"images\")\r\n    //       .child(imageSrc)\r\n    //       .getDownloadURL()\r\n    //       .then((url) => {\r\n    //         updateState({ imageSrc: url });\r\n    //       });\r\n    //   }\r\n    // );\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const acceptedFileTypes = \"image/jpg, image/jpeg, image/gif, image/png\";\r\n    const isVerified = verifyFile(e.target.files, acceptedFileTypes);\r\n    if (isVerified) {\r\n      const selectedFile = e.target.files[0];\r\n      updateState({ selectedFile, showImageEditor: true });\r\n    }\r\n  };\r\n\r\n  const renderImageRender = () => {\r\n    return (\r\n      <>\r\n        <div id=\"image-editor\">\r\n          <AvatarEditor\r\n            image={state.selectedFile}\r\n            width={200}\r\n            height={200}\r\n            border={50}\r\n            color={[255, 255, 255, 0.6]} // RGBA\r\n            scale={state.scale}\r\n            onPositionChange={onPositionChange}\r\n            position={state.position}\r\n            ref={setEditorRef}\r\n            rotate={state.rotate}\r\n          />\r\n        </div>\r\n        <div id=\"image-editor-controls\">\r\n          <div>\r\n            <label>Scale</label>\r\n            <input\r\n              name=\"scale\"\r\n              type=\"range\"\r\n              onChange={onScale}\r\n              min=\"1\"\r\n              max=\"2\"\r\n              step=\"0.01\"\r\n              defaultValue=\"1\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderProfileImage = () => {\r\n    const profileImage = state.imageSrc ? state.imageSrc : defaultImage;\r\n    return <img className=\"profile-image\" src={profileImage} alt=\"user-logo\" />;\r\n  };\r\n\r\n  const renderImageUpload = () => {\r\n    return (\r\n      <>\r\n        <label htmlFor=\"file-upload\" className=\"upload-photo\">\r\n          Upload Photo\r\n        </label>\r\n        <input\r\n          id=\"file-upload\"\r\n          type=\"file\"\r\n          multiple={false}\r\n          onChange={onChange}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state.showImageEditor ? renderImageRender() : renderProfileImage()}\r\n      {state.showImageEditor ? (\r\n        <button onClick={uploadImage}>Upload</button>\r\n      ) : (\r\n        renderImageUpload()\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\rs102\\Desktop\\borrow\\src\\firebase\\firebase.js",[],{"ruleId":"20","severity":1,"message":"21","line":7,"column":10,"nodeType":"22","messageId":"23","endLine":7,"endColumn":17},"no-unused-vars","'storage' is defined but never used.","Identifier","unusedVar"]